@page "/identity/account/register"
@layout AuthenticationLayout
@inject SfDialogService dialogService
@inject NavigationManager navManager

<div class="container">
    <div class="row">
        <div class="col-lg-5"></div>
        <div class="col-lg-2">
            <EditForm Enhance Model="User" OnValidSubmit="HandleRegistration">
                <DataAnnotationsValidator />
                <div class="card bg-dark" style="opacity:0.5; margin-top:50%; border-radius:10px; color:white; font-weight:bold">
                    <div class="card-header text-center fs-5">Register an account</div>

                    <div class="container">
                        <div class="row">
                            <div class="col-lg-4 col-md-4 col-sm-4">
                                <div class="col-lg-4 col-md-4 col-sm-4 d-flex justify-content-center">
                                    <img style="border-radius:20px" src="../images/background/background.avif" height="50" width="50" />
                                </div>
                            </div>

                        </div>
                    </div>

                    <div class="card-body">
                        <div class="form-group">
                            <label class="form-label">Fullname</label>
                            <InputText @bind-Value="User.FullName" class="form-control"></InputText>
                        </div>
                        <div class="form-group mt-3">
                            <label class="form-label">Email</label>
                            <InputText @bind-Value="User.Email" class="form-control"></InputText>
                        </div>
                        <div class="form-group mt-3">
                            <label class="form-label">Password</label>
                            <InputText type="password" @bind-Value="User.Password" class="form-control"></InputText>
                        </div>
                        <div class="form-group mt-3">
                            <label class="form-label">Confirm Password</label>
                            <InputText type="password" @bind-Value="User.ConfirmPassword" class="form-control"></InputText>
                        </div>
                        <div class="form-group mt-3">
                            @if (ShowLoadingButton)
                            {
                                <ButtonLoadingSpinner></ButtonLoadingSpinner>
                            }
                            else
                            {
                                <button class="btn btn-outline-primary float-end" type="submit">Register</button>
                            }
                            </div>
                    </div>
                    <div class="card-footer">
                        <span class="text-center">
                            Do you have account?
                            <a class="btn-link" href="identity/account/login">Login</a>
                        </span>
                        <ValidationSummary />
                    </div>
                </div>
            </EditForm>

        </div>
        <div class="col-lg-5">
     
        </div>

    </div>

</div>


@code {

    private LoginPage loginPage;

    public bool ShowLoadingButton { get; set; } = false;
    Register User = new();

    [CascadingParameter] public Task<AuthenticationState> authenticationState { get; set; }
    protected async override Task OnInitializedAsync()
    {
        await CheckUserAuthentication();
    }



    async Task HandleRegistration(){
        ShowLoadingButton = true;
        var result = await accountService.CreateAsync(User);
        if(result.Flag){
            await DisplayDialog(result.Message, "Success");
            User = new();
        }else{
            await DisplayDialog(result.Message, "Alert!");
        }
        ShowLoadingButton = false;
    }


    public async Task DisplayDialog(string content, string title)
    {
        await dialogService.AlertAsync(content, title);
    }

    private async Task CheckUserAuthentication()
    {
        var user = (await authenticationState).User;
        bool isUserAuthenticated = user.Identity!.IsAuthenticated;
        if (isUserAuthenticated)
            navManager.NavigateTo("/home/dashboard");
    }
}
